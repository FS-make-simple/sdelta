Sun Oct  3 22:17:22 UTC 2004	20041003	Kyle Sallee
Made sdelta executable smaller, use less memory, and run faster.
The output format of sdelta patches has not changed
making this sdelta backward compatible with 20040926


Sun Dec  5 01:15:23 UTC 2004	20041205	Kyle Sallee
Pavel Gorshkov <svinn@gmx.net> reports detailed information
about how sdlta crashes on BSD which points toward a bug at
the end of function natural_block_list that reallocates the
memory for the natural block list smaller than it need be.
Intersting how linux gives a few more bytes
for sloppy memory allocation than BSD allows.


Sun Dec  5 22:54:11 UTC 2004	20041206	Kyle Sallee
Pavel Gorshkov <svinn@gmx.net> provided a patch for
adler32.h that corrects endian detection on BSD.
sdelta is now confirmed to compile and run properly on BSD.
Thanks Pavel Gorshkov!

File ADVANCED has been updated with the following information:
1. Results of testing sdelta with the standard dictionary file
on a large corpus of source tarballs and the problems and
benfits of using generic dictionary patching.
2. Potential use of 7zip high compression technology with sdelta
technology and it's current savings over bzip2 for compressing a
large and mostly compressible Sorcerer Install/Rescue ISO9660 image.


Wed Dec  8 00:03:12 UTC 2004	20041208	Kyle Sallee
Pavel Gorshkov <svinn@gmx.net> provided a patch for
adler32.h that corrects endian detection on Solaris.
Problem with malloc and realloc on BSD may cause
problems creating and using large sdelta patches
and creates a signifigant performance degredation
over sdelta on linux.  To avoid the problem one may
want to install libdlmalloc from /usr/ports/devel/libdlmalloc
and then gcc -O2 -pipe *.c -ldlmalloc -lmhash -o sdelta
or export LD_PRELOAD=/usr/lib/libdlmalloc.so prior to
running sdelta.


Fri Dec 17 21:50:18 UTC 2004	20041217	Kyle Sallee
Implemented changes for accepting input of sdelta patch
and dictionary file on command line for faster application
of sdelta patches on FreeBSD.  However the changes provide
negligible speed improvement on linux.

Thanks goes to Pavel Gorshkov <svinn@gmx.net> for finding
that successive calls to realloc on FreeBSD even with an
alternate malloc is far slower than a malloc.


Fri Dec 31 20:39:52 UTC 2004	20041231	Kyle Sallee
Made changes and improvements resulting in
30% speed increase in sdelta patch generation.
# make bsd
now compiles the source with the correct
library links for use on FreeBSD.


Sat Jan  1 21:57:59 UTC 2005	20040101	Kyle Sallee
Made changes and improvements resulting in
25% speed increase in sdelta patch generation
over the previous day's release.
Very large files will result in less swap
thrashing during sdelta patch generation.
Compressed size of sdelta patches may either
increase or decrease a little due to these changes.


Mon Jan  3 21:00:43 UTC 2005	20040103	Kyle Sallee
Added leap frogging to expedite the location of the first
potential matching block resulting in a huge speed gain
proportional to the size of the files used to generate a delta.
Thanks goes to Pavel Gorshkov <svinn@gmx.net> for introducing
a one line change in blocks.c that slightly improve the speed
of which the natural block list is generated for files that
have lines exceeding 127 bytes.


Tue Jan  4 23:03:29 UTC 2005	20040104	Kyle Sallee
Made sorting faster.
Eliminated a bug in sdelta.c where I placed a
break when I really wanted a continue command.


Tue Jan 11 21:45:36 UTC 2005			Kyle Sallee
Using a new input.c to better support mmap reading of files
and anonymous mmap on stdin on Linux, FreeBSD, and Solaris POSIX.
mmap of files instead of reading them into swap provides better
performance and less swapping when making sdelta patches of very
large files like the + 500M Sorcerer Install/Rescue ISO9660.

Introduced POSIX threading to sdelta generation that should
improve speed of sdelta generation on SMP boxes with adequate
RAM to avoid swapping or re-reading of mmaped files.


Sun Jan 16 22:11:32 UTC 2005	20040117	Kyle Sallee
Reviewed source to remove some insignifigantly buggy code.
Modified the way tag values are calculated to require the
crc for the desired block and following block to create
greater entropy in the ordered block list which yields
faster searches.


Wed Jan 26 10:54:30 UTC 2005			Kyle Sallee
Modified code to use 64 bit integers where
applicable instead of 32 bit integers.
This change causes minor slow down on 32 bit architecture
for occasional unnecessary 32 bit memory access.
However it may be faster on 64 bit architecture
where it can fetch 64 bits at a time and save
on an additional indexing.


Fri Jan 28 21:52:11 UTC 2005			Kyle Sallee
Thanks goes to Pavel Gorshkov <svinn@gmx.net> switching SHA1
generation from mhash to openssl since openssl is faster.


Fri Jan 28 21:52:11 UTC 2005	20050129	Kyle Sallee
Added sd BASH 3.0 script to wrap invocation of sdelta.
sd provides transparent compression and decompression
of source tarballs and sdelta patches.
This aught to make sdelta easer for POSIX novices.


Sun Jan 30 23:48:42 UTC 2005	20050130	Kyle Sallee
Fixed typos in Makefile reported by Ady Deac <adydeac@yahoo.com>


Tue Feb 22 02:25:32 UTC 2005	20050222	Kyle Sallee
Initial release and testing of sdreq client for
selecting sdelta patches to upgrade wanted sources,
make the request for generation of patches,
download the patches,
and apply the patches to generate the new source.
Email notification works however uploading
patch files via ftp is not yet tested.
The service may or may not be available until sdreq
and the server side code is completely debugged.


Tue Mar  8 01:34:55 UTC 2005	20050308	Kyle Sallee
The PPR now accepts two types of requests:  patches and tarballs.
However both the patch names and tarball
names must not specify a compression type.
Allowed:     bash-2.05b.tar-bash-2.05b.tar.sd
             bash-2.05b.tar
Disallowed:  bash-2.05b.tar-bash-2.05b.tar.bz2
             bash-2.05b.tar.7z
sdreq has been updated to act this way.
the PPR provides the smallest compressed patch
whether that patch for download may be called
bash-2.05b.tar-bash-2.05b.tar.sd.bz2  or
bash-2.05b.tar-bash-2.05b.tar.sd.7z
sdreq downloads the patch that is available.
Consequently, sdreq now requires p7zip installed since
some patches may not be available bzip2 compressed.
This change is entirely transparent to those using the sdreq client.

If you want a bash-2.05.tar.bz2 tarball then touch that
in your want directory and it will probably be provided.
If no suitable patch can be created then the smallest
bzip2 or 7za compressed tarball will be downloaded
instead and the compression type will be translated
to the type specified by the wanted filename.


Wed Mar 16 01:32:45 UTC 2005	20050316	Kyle Sallee
The sdreq client has been enhanced to generate better
matches between the sources a box has and wanted sources.


Tue Mar 22 22:40:52 UTC 2005	20050322	Kyle Sallee
New location/modification for downloading patches and sources.
This change was to make it easier to rsync mirror the PPR's
patches and optimially compressed source tarballs.
What used to be:
http://ibiblio.org/sdelta/patches/ and
http://ibiblio.org/sdelta/sources/  is now
http://ibiblio.org/sdelta/files/patches/
http://ibiblio.org/sdelta/files/sources/, respectively.


Sun Apr 17 05:15:59 UTC 2005	no release	Kyle Sallee
I finished the coding for sdelta 2.
The compressed patch files generated by sdelta 2
can be between 10% and 60% smaller than sdelta.
However there is a 3x increase in time required to make the 
patch and a small less than 1.25x increase in memory usage.
However the sdelta2 patches do apply faster.

Although 10%->60% smaller compressed patch files yields
faster downloads the impact upon overall patch savings
would be between 1% and 5% per patch.
Considering that the sdelta PPR is already running near
95% savings the enhancement could yield only an additional
2% savings at best.

You can make sdelta2 by typing make sdelta2, but you must
manually install it and I have not updated the sd wrapper
to support sdelta 2 archive files yet.


Tue Apr 19 21:19:22 UTC 2005	no release yet	Kyle Sallee
Slightly optimized sdelta2 code,
added support for sdelta2 patch files into the sd wrapper,
wrote SDELTA2_README to explain what it is.


Fri Apr 29 20:48:49 UTC 2005	20050429	Kyle Sallee
Satisfied with the sdelta2 format which is very similar
to sdelta format and also no more bugs apparent in the
linux version of sdelta2 I am making a release.
sdelta2 may still contain bugs that show up in the FreeBSD port.


Sat Apr 30 23:29:26 UTC 2005	no relase yet	Kyle Sallee
Improved blocking code in sdelta2 to select additional 
block delimiters only near the presence of NULLs.
This focuses the larger production of blocks 
within the tar meta-data where he additional 
blocking can help increase the amount of matching blocks.
On average still twice as many blocks are produced and 
many more are searchable in sdelta2 than sdelta causing 
a small increase in memory consumption and about twice 
as long to generate a delta file.


Mon May  2 00:20:33 UTC 2005	no release yet	Kyle Sallee
Overhalled the blocking code in sdelta2 to colate
NULLs into unlimited length blocks by themself.
This change made sdelta2 generated 
patches smaller and slower to generate.


Fri May 13 03:07:23 UTC 2005	20050513	Kyle Sallee
After +3 years of patch production at ibiblio.org 
an admin disable patch production for a week by 
removing my crontab access and turning off my 
cronjobs and suggest that I find a new place
to generate patches.
Good thing patch generation is a fast light load.
Therefore, I picked up server scripts and moved to berlios.de


Sat May 14 05:29:23 UTC 2005	20050514	Kyle Sallee
The PPR has been moved to a box with a meager
amount of RAM and a miniscule amount of swap.
However the box does have plenty of space on /tmp.
Consequently, sdelta and sdelta2 were modified
to mmap the large data structures that they
create onto temporary files created on /tmp
The temporary files act like swap files.
This enables sdelta and sdelta2 to use a
memory address range as large as required,
and as much RAM as available or required,
but without spilling into swap space as long
as /tmp resides on a physical file system
and not a tmpfs virtual file system.

Also the multi-threading in sdelta and sdelta2
was causing segmentation faulting at the new PPR.
Consequently, I created new build targets
of sdelta-not and sdelta2-not that create
sdelta and sdelta2, respectively, with no threading.


Mon May 16 21:57:06 UTC 2005	20050516	Kyle Sallee
Pavel reports that threading is not entirely stable on FreeBSD.
Threading has problems on old linux/glibc.
In the interest of stablity threading will no longer be used.

This release backs all the memory required
for data structures to a single temporary file.
The code is cleaner and checks for errors when
allocating, resizing and mmaping the temporary file.
sdelta and sdelta2 patch generation now 
require the same amount of addressable memory.
sdelta still uses less RAM than sdelta2.


Tue May 17 07:53:50 UTC 2005 	20050517	Kyle Sallee
This is a fix to prevent segmentation faulting 
from a free on a memory that was not malloced.
And it fixes a possible memory overrun when
generating patches on very small tarballs.


Wed May 18 00:54:54 UTC 2005	20050518	Kyle Sallee
berlios.de reconfigured the web server to deny
access to files with extentions .bz2 and .gz.
Therefore, I adjusted both the server and client 
to provide patches via berlios's ftp server.


Sat May 21 07:06:35 UTC 2005	no release yet	Kyle Sallee
This release introduces sdelta3.
sdelta3 is both faster and produces
smaller patch files than sdelta2.
sdelta3 is not as fast as sdelta,
but it uses less memory than sdelta and sdelta2.

sdelta3 is less complexs.
sdelta3 does not use hashes nor CRC lists.
Instead it combines the best technologies of
sdelta and sdelta2 while eliminating the dubious overhead.
sdelta3 demonstrates an effective delta generator
can be created using only 1 or 2 arrays of blocks in
addition to the content of the files being compared.


Sun May 29 22:11:50 UTC 2005	20050529	Kyle Sallee

This may be the last release of sdelta.
The source was truncated to providing only sdelta.

sdreq was removed from this tarball.
sdreq is provided with sdelta3 which is the
new standard for patches generated at the PPR.
sdelta has a nice combination of tiny patch size with speed.
However sdelta3 creates smaller compressed patches.
Since patch generation is done only once for the many times
which it can be downloaded and applied using sdelta3's
smaller yet slower to generate patches is best for the PPR.
